name: testing

on:
  push:
  pull_request:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

jobs:
  run-tests-tarantool-1-10:
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository) ||
      (github.event_name == 'workflow_dispatch')
    strategy:
      fail-fast: false
      matrix:
        golang: ['1.24', 'stable']
        tarantool: ['1.10']
        coveralls: [false]
        fuzzing: [false]
    uses: ./.github/workflows/reusable-run.yml
    with:
      os: ubuntu-22.04
      go-version: ${{ matrix.golang }}
      tarantool-version: ${{ matrix.tarantool }}
      coveralls: ${{ matrix.coveralls }}
      fuzzing: ${{ matrix.fuzzing }}

  run-tests:
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository) ||
      (github.event_name == 'workflow_dispatch')
    strategy:
      fail-fast: false
      matrix:
        golang: ['1.24', 'stable']
        tarantool: ['2.11', '3.4', 'master']
        coveralls: [false]
        fuzzing: [false]
        include:
          - golang: '1.24'
            tarantool: 'master'
            coveralls: true
            fuzzing: false
          - golang: '1.24'
            tarantool: 'master'
            coveralls: false
            fuzzing: true
    uses: ./.github/workflows/reusable-run.yml
    with:
      os: ubuntu-24.04
      go-version: ${{ matrix.golang }}
      tarantool-version: ${{ matrix.tarantool }}
      coveralls: ${{ matrix.coveralls }}
      fuzzing: ${{ matrix.fuzzing }}

  testing_mac_os:
    # We want to run on external PRs, but not on our own internal
    # PRs as they'll be run by the push to the branch.
    #
    # The main trick is described here:
    # https://github.com/Dart-Code/Dart-Code/pull/2375
    if: (github.event_name == 'push') ||
      (github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name != github.repository) ||
      (github.event_name == 'workflow_dispatch')

    strategy:
      fail-fast: false
      matrix:
        golang:
          - '1.24'
          - 'stable'
        runs-on:
          - macos-14
          - macos-15
          - macos-26

    env:
      # Make sense only for non-brew jobs.
      #
      # Set as absolute paths to avoid any possible confusion
      # after changing a current directory.
      T_VERSION: ${{ matrix.tarantool }}
      T_SRCDIR: ${{ format('{0}/tarantool-{1}', github.workspace, matrix.tarantool) }}
      T_TARDIR: ${{ format('{0}/tarantool-{1}-build', github.workspace, matrix.tarantool) }}
      SRCDIR: ${{ format('{0}/{1}', github.workspace, github.repository) }}

    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Clone the connector
        uses: actions/checkout@v5
        with:
          path: ${{ env.SRCDIR }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.29.x'

      - name: Install latest tarantool from brew
        run: brew install tarantool

      - name: Setup golang for the connector and tests
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.golang }}

      # Workaround issue https://github.com/tarantool/tt/issues/640
      - name: Fix tt rocks
        run: |
          brew ls --verbose tarantool | grep macosx.lua | xargs rm -f

      - name: Install test dependencies
        run:  |
          brew install tt
          cd "${SRCDIR}"
          make deps

      - name: Run regression tests
        run: |
          cd "${SRCDIR}"
          make test

      - name: Run race tests
        run: |
          cd "${SRCDIR}"
          make testrace

      - name: Run fuzzing tests
        if: ${{ matrix.fuzzing }}
        run: |
          cd "${SRCDIR}"
          make fuzzing TAGS="go_tarantool_decimal_fuzzing"

      - name: Check workability of benchmark tests
        if: matrix.golang == 'stable'
        run: |
          cd "${SRCDIR}"
          make bench-deps bench DURATION=1x COUNT=1
